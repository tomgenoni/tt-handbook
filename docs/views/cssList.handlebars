<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Utilities</title>
    <link rel="stylesheet" href="/css/tui.css">
    <link rel="stylesheet" href="/css/utils.css">
    <style>
        .filter-active .entry {
            display: none !important;
        }

        .filter-active .match-class,
        .filter-active .match-declaration {
            display: flex !important;
        }
    </style>
</head>

<body>
    <div class="ph3 s:ph0">
        <div class="mt5 center mw7 flex items-center ">
            <input type="text"  placeholder="starts with..." class="tp-text-input tp-text-input--small mr3" id="filter" />
            <select id="filter-type" class="tp-select tp-select--small">
                <option value="class">Class</option>
                <option selected value="declaration">Declaration</option>
            </select>
        </div>
        <div class="longread center mw7 mv3">
            {{#each this}} {{{cssList}}} {{/each}}
        </div>
    </div>

    <script>
        const dataClass = document.querySelectorAll(".filter-class");
        const dataDeclaration = document.querySelectorAll(".filter-declaration");
        const body = document.querySelector("body");

        const filterInput = document.querySelector("#filter");
        const filterSelect = document.querySelector("#filter-type");
        const enties = document.querySelectorAll(".entry");

        function purgeMatches() {
            enties.forEach(function (i) {
                i.classList.remove("match-class");
                i.classList.remove("match-declaration");
            });
            body.classList.remove("filter-active");
        }

        function addFilterClass(arr, term, className) {
            arr.forEach(function (i) {
                let classStr = i.innerHTML;
                let entry = i.closest(".entry");

                if (classStr.startsWith(term)) {
                    entry.classList.add(className);
                }
            });
        }

        function filterClasses(term, type) {
            purgeMatches();

            console.log(term, type);

            if (term != "") {
                body.classList.add("filter-active");
                if (type == "class") {
                    addFilterClass(dataClass, term, "match-class");
                } else {
                    addFilterClass(dataDeclaration, term, "match-declaration");
                }
            }
        }

        filterInput.addEventListener("keyup", function () {
            let term = this.value;
            let type = filterSelect.value;
            filterClasses(term, type);
        })

        filterSelect.addEventListener("change", function () {
            let term = filterInput.value;
            let type = this.value;
            filterClasses(term, type);
        })

    </script>


    <script src="https://cdn.jsdelivr.net/npm/clipboard@2/dist/clipboard.min.js"></script>
    <script>

        var clipboard = new ClipboardJS('.clipboard', {
            target: function(trigger) {
                return trigger;
            }
        });

        clipboard.on('success', function(e) {
            e.trigger.classList.add("success")
            setTimeout(function(){
                e.trigger.classList.remove("success")
            }, 2000)
            e.clearSelection();
        });

    </script>


</body>

</html>